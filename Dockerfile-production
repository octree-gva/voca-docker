ARG ALPINE_RUBY_VERSION=2.7.3
# Should exists for alpine, see https://unofficial-builds.nodejs.org/download/release/
ARG NODE_VERSION=v16.13.0 
ARG USER=decidim
ARG USER_UID=1001
ARG GROUP=admin
ARG GROUP_UID=1001
ARG DEV_PATH

FROM $DEV_PATH  AS build

RUN source $NVM_DIR/nvm.sh; nvm use $NODE_VERSION && \
    SECRET_KEY_BASE=assets bundle exec rails assets:precompile

########################################################################
# Final layer
########################################################################
FROM ruby:${ALPINE_RUBY_VERSION}-alpine
LABEL contact.creator="hadrien@octree.ch"\
     contact.maintainer1="tim@octree.ch" \
     contact.org="hello@octree.ch"\
     description=" \
"
ARG ALPINE_RUBY_VERSION
ARG USER
ARG USER_UID
ARG GROUP
ARG GROUP_UID

ENV USER=$USER \
    USER_UID=$USER_UID \
    GROUP=$GROUP\
    GROUP_UID=$GROUP_UID \
    RAILS_ENV=production \
    RACK_ENV=production \
    NODE_VERSION=$NODE_VERSION \
    RAILS_ROOT=/home/$USER/app \ 
    ROOT=/home/$USER/app \ 
    HOME_PATH=/home/$USER/app \ 
    RAILS_ENV=production \
    RACK_ENV=production\
    DATABASE_HOST="pg" \
    DATABASE_USERNAME="example" \
    DATABASE_PASSWORD="my-insecure-password" \
    DATABASE_DATABASE="decidim" \
    PORT=3000\
    DOCKER_EXPOSED_PORT=3000 \
    RAILS_MAX_THREAD=5\
    RAILS_FORCE_SSL="enabled" \
    RAILS_SERVE_STATIC_FILES="false"\
    SECRET_KEY_BASE="quickstart" \
    TZ="Europe/Zurich" \
    RAILS_LOG_DAILY="disabled" \
    RAILS_PID_FILE="tmp/pids/server.pid" \
    RAILS_SERVE_STATIC_FILES="disabled" \
    RAILS_CACHE_MODE="disabled"\
    RAILS_CACHE_REDIS_URL="redis://username:password@redis:6379/0"\
    DECIDIM_BLOCK_SYSTEM="disabled"\
    SAFELIST_IPS="" \
    RAILS_JOB_MODE="default" \
    JOB_REDIS_URL="redis://username:password@redis:6379/1"\
    GEO_HERE_API=""\
    DECIDIM_DEFAULT_LOCALE="fr"\
    DECIDIM_AVAILABLE_LOCALES="fr,en,pt,pt-BR"\
    DECIDIM_CURRENCY_UNIT="CHF"\
    INSTANCE_UUID="undefined"



ENV PATH=$PATH:$RAILS_ROOT/bin

WORKDIR $RAILS_ROOT

RUN gem update --system && \
    gem install bundler && \
    apk add --no-cache \
        postgresql-dev \
        tzdata \
        imagemagick \
        bash \
        vim \
        && rm -rf /var/cache/apk/*


# Set bundle config again, to have passing bundle check
RUN bundle config set without 'development test'

# Create system user to run as non-root.
RUN addgroup -S $GROUP -g $GROUP_UID && \
    adduser -S -g '' -u $USER_UID -G $GROUP $USER


# Add imagemagick policy
COPY ./tmp/imagemagick-policy.xml /etc/ImageMagick-7/policy.xml

# Switch to non-root system user
USER $USER

# Copy binaries
COPY --from=build /usr/local/bundle/ /usr/local/bundle/
COPY --from=build --chown=$USER:$GROUP /home/$USER/app .
COPY ./bin bin/


# Define bash as the default shell
SHELL ["/bin/bash", "-l", "-c"]

ENTRYPOINT ["$RAILS_ROOT/bin/entrypoint.sh"]
CMD ["bin/start $DECIDIM_PROCESS"]